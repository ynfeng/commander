plugins {
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id "org.sonarqube" version "3.1.1"
    id 'jacoco'
}

sonarqube {
    properties {
        property "sonar.projectKey", "ynfeng_commander"
        property "sonar.organization", "ynfeng"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'java'
    group = 'com.github.ynfeng'
    version = '1.0.0'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    dependencies {
        implementation(
                "com.google.guava:guava:$guavaVersion",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "ch.qos.logback:logback-classic:$logbackVersion",
                "ch.qos.logback:logback-core:$logbackVersion",
                "org.fusesource.jansi:jansi:1.18"
        )

        testImplementation(
                "org.junit.jupiter:junit-jupiter:$junitVersion",
                "org.hamcrest:hamcrest-core:$hamcrestVersion",
                "org.hamcrest:hamcrest-library:$hamcrestVersion",
                "org.mockito:mockito-core:$mockitoVersion",
                "org.awaitility:awaitility:$awaitilityVersion"
        )
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    apply from: "$rootDir/gradle/scripts/coverage.gradle"
    apply from: "$rootDir/gradle/scripts/checkstyle.gradle"
    apply from: "$rootDir/gradle/scripts/coveralls.gradle"
}
